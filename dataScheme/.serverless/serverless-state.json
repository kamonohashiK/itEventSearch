{
  "service": {
    "service": "it-event-bot",
    "serviceObject": {
      "name": "it-event-bot"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "region": "ap-northeast-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GraphQlApi": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
              "Name": "ItEventSearchBot",
              "AuthenticationType": "AWS_IAM",
              "AdditionalAuthenticationProviders": []
            }
          },
          "GraphQlSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
              "Definition": "type Event {\n  url: String!\n  title: String!\n  datetime: AWSDateTime!\n  pref: String!\n}\n\ninput CreateInputEvent {\n  url: String!\n  title: String!\n  datetime: AWSDateTime!\n  pref: String!\n}\n\ntype Query {\n  byPref(pref: String!): [Event!]!\n  getEvent(url: String!): Event\n}\n\ntype Mutation {\n  createEvent(input: CreateInputEvent!): Event\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n",
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              }
            }
          },
          "GraphQlDsEventRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsEventPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:*"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:ap-northeast-1:*:table/Event",
                          "arn:aws:dynamodb:ap-northeast-1:*:table/Event/*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlDsEvent": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "Event",
              "Description": "Event Table",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "GraphQlDsEventRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "ap-northeast-1",
                "TableName": "Event",
                "UseCallerCredentials": false
              }
            }
          },
          "GraphQlResolverQuerybyPref": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "byPref",
              "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"pref\": $util.dynamodb.toDynamoDBJson($ctx.args.pref)\n    }\n}",
              "ResponseMappingTemplate": "$util.toJson($context.result.items)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsEvent",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverQuerygetEvent": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getEvent",
              "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"GetItem\",\n    \"key\" : {\n        \"url\": $util.dynamodb.toDynamoDBJson($ctx.args.url)\n    }\n}",
              "ResponseMappingTemplate": "$util.toJson($context.result)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsEvent",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverMutationcreateEvent": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Mutation",
              "FieldName": "createEvent",
              "RequestMappingTemplate": "{\n    \"version\": \"2017-02-28\",\n    \"operation\": \"PutItem\",\n    \"key\": {\n        \"url\":   $util.dynamodb.toDynamoDBJson($ctx.args.input.url)\n    },\n    \"attributeValues\": $util.dynamodb.toMapValuesJson($context.args.input),\n    \"condition\": {\n        \"expression\": \"attribute_not_exists(#userId)\",\n        \"expressionNames\": {\n            \"#userId\": \"userId\"\n        }\n    }\n}",
              "ResponseMappingTemplate": "$util.toJson($context.result)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsEvent",
                  "Name"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GraphQlApiUrl": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "GraphQLUrl"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "appSync": {
        "name": "ItEventSearchBot",
        "authenticationType": "AWS_IAM",
        "region": "ap-northeast-1",
        "mappingTemplatesLocation": "resolvers",
        "mappingTemplates": [
          {
            "type": "Query",
            "field": "byPref",
            "dataSource": "Event"
          },
          {
            "type": "Query",
            "field": "getEvent",
            "dataSource": "Event"
          },
          {
            "type": "Mutation",
            "field": "createEvent",
            "dataSource": "Event"
          }
        ],
        "schema": [
          "schema/event.graphql"
        ],
        "dataSources": [
          {
            "type": "AMAZON_DYNAMODB",
            "name": "Event",
            "description": "Event Table",
            "config": {
              "tableName": "Event",
              "iamRoleStatements": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsEventRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"]"
              }
            }
          }
        ]
      }
    },
    "plugins": [
      "serverless-appsync-plugin"
    ],
    "pluginsData": {},
    "functions": {},
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/it-event-bot/dev/1578038824868-2020-01-03T08:07:04.868Z",
    "artifact": ""
  }
}